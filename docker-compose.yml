version: '3.8'

services:
  rtai:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    container_name: rtai-trading
    restart: unless-stopped
    
    # Resource limits
    mem_limit: 512m
    mem_reservation: 256m
    cpus: "1.0"
    
    # Environment configuration
    environment:
      - RTAI_LOG_LEVEL=${RTAI_LOG_LEVEL:-INFO}
      - RTAI_ENVIRONMENT=production
      - RTAI_SYMBOL=${RTAI_SYMBOL:-BTCUSDT}
      - RTAI_HEALTH_PORT=8080
      - PYTHONUNBUFFERED=1
    
    # Environment file (secrets)
    env_file:
      - .env
    
    # Port mapping
    ports:
      - "8080:8080"  # Health dashboard
      - "8443:8443"  # HTTPS (if needed)
    
    # Volume mounts for persistence
    volumes:
      - ./logs:/app/logs
      - ./output:/app/output
      - ./data:/app/data
      - rtai-questdb:/app/questdb
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Network
    networks:
      - rtai-network

  # Optional: Monitoring stack
  prometheus:
    image: prom/prometheus:latest
    container_name: rtai-prometheus
    restart: unless-stopped
    profiles:
      - monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - rtai-network

  grafana:
    image: grafana/grafana:latest
    container_name: rtai-grafana
    restart: unless-stopped
    profiles:
      - monitoring
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana-dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - rtai-network

volumes:
  rtai-questdb:
  prometheus-data:
  grafana-data:

networks:
  rtai-network:
    driver: bridge
